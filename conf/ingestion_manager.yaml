# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Questo e' la descrizione delle API all'interno del DAF
# Le API sono pubbliche

swagger: '2.0'
info:
  title: Ingestion Manager API
  description: This microservice manages the ingestion procedures
  version: "BETA"
  termsOfService: http://termofservice
  contact:
    name: team digitale
    url: https://teamdigitale.governo.it
  license:
    name: Creative Commons 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
host : localhost:9000
# will be prefixed to all paths
basePath: /ingestion-manager/v1
# array of all schemes that your API supports
schemes:
  - http
produces:
  - application/json
paths:
  "/add-new-dataset/{ds_logical_uri}":
    get:
      summary: Setup ingestion procs for a new dataset added in the catalog manager
      description: |
        Setup ingestion procs for a new dataset added in the catalog manager. It calls NiFi API to manage the new pipeline.
      tags:
        - Ingestion, new dataset
      operationId: addNewDataset
      parameters:
        - name: ds_logical_uri
          in: path
          description: logical uri of the dataset
          required: true
          type: string
      responses:
        200:
          description: IngestionReport
          schema:
            $ref: '#/definitions/IngestionReport'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/ing-pipelines/get-all/":
    get:
      summary: Get the list of available ingestion pipelines
      description: Get the list of available ingestion pipelines
      tags:
        - Ingestion, pipelines
      operationId: pipelineListAll
      responses:
        200:
          description: List of Pipeline objects
          schema:
            type: array
            items:
              $ref: "#/definitions/PipelineInfo"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/ing-pipelines/get-bycat/{pipeline_category}":
      get:
        summary: Get the list of available ingestion pipelines by category
        description: Get the list of available ingestion pipelines by category
        tags:
          - Ingestion, pipelines
        operationId: pipelineListByCat
        parameters:
          - name: pipeline_category
            in: path
            description: id of the type of operation performed by the ingestion pipeline.
            required: true
            type: string
        responses:
          200:
            description: List of Pipeline objects
            schema:
              type: array
              items:
                $ref: "#/definitions/PipelineInfo"
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  "/ing-pipelines/get-byid/{pipeline_id}":
        get:
          summary: Get the list of available ingestion pipelines by id
          description: Get the list of available ingestion pipelines by id
          tags:
            - Ingestion, pipelines
          operationId: pipelineListById
          parameters:
            - name: pipeline_id
              in: path
              description: id of the type of operation performed by the ingestion pipeline.
              required: true
              type: string
          responses:
            200:
              description: List of Pipeline objects
              schema:
                type: array
                items:
                  $ref: "#/definitions/PipelineInfo"
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/Error'

definitions:
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  Successfull:
    type: object
    properties:
      message:
        type: string
  IngestionReport:
    type: object
    required:
      - resultStatus
    properties:
      resultStatus:
        type: string
      nifi:
        type: string
  Credentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  PipelineInfo:
    type: object
    description: Object describing info on the Ingestion Pipeline
    required:
      - id
      - name
      - category
      - description
      - default_batch
      - default_stream
    properties:
      id:
        type: string
      name:
        type: string
      category:
        type: string
      description:
        type: string
      default_batch:
        type: boolean
      default_stream:
        type: boolean
